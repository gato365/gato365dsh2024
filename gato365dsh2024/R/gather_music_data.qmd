


```{r}
# Load necessary libraries
library(spotifyr)
library(tidyverse)

# Set Spotify API credentials
Sys.setenv(SPOTIFY_CLIENT_ID = '743e9f5e09384c26aa3c57a8885bef21')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '4c309ba4599b465cb04a0306de9a32fc')

# Authenticate with Spotify API
access_token <- get_spotify_access_token()
```

## The one data frame
```{r}
# Function to get artist audio features and return as a data frame
get_artist_data <- function(artist_name) {
  
  check_word = c("fuck", "bitch", "nigga","niggas","niggaz", "nigger", "hell", "slut", "asshole", "motherfucker", "pussy", "whore", "damn", " shit")
  check_word = paste(check_word, collapse = "|")
  
  
  artist_data <- get_artist_audio_features(artist_name) %>%
    mutate(artist_name = artist_name) %>% 
    select(artist_name,album_release_date,album_release_year, album_name, danceability,energy
           , key,loudness,speechiness,acousticness, instrumentalness,liveness,valence, tempo,duration_ms,explicit,track_name,track_number, key, key_mode )%>% 
    mutate(track_name = as.character(tolower(track_name))) %>%
    mutate(cursed_word_old = str_detect(track_name, check_word)) %>% 
    
    
    mutate(track_name = str_replace_all(track_name, regex("Slut", ignore_case = TRUE), "S**t")) %>%
    mutate(track_name = str_replace_all(track_name, regex("\\bShit\\b", ignore_case = TRUE), "S**t")) %>%
    mutate(track_name = str_replace_all(track_name, regex("damn", ignore_case = TRUE), "D**n")) %>%
    mutate(track_name = str_replace_all(track_name, regex("Bitch", ignore_case = TRUE), "B***h")) %>%
    mutate(track_name = str_replace_all(track_name, regex("Pussy", ignore_case = TRUE), "P***y")) %>%
    mutate(track_name = str_replace_all(track_name, regex("Fucking", ignore_case = TRUE), "F****g")) %>%
    mutate(track_name = str_replace_all(track_name, regex("Fuck", ignore_case = TRUE), "F**k")) %>% 
    mutate(track_name = str_replace_all(track_name, regex("niggas|niggaz|nigga", ignore_case = TRUE), "n****s")) %>% 
    mutate(track_name = str_replace_all(track_name, regex("\\bhell\\b", ignore_case = TRUE), "h**l")) %>% 
    mutate(cursed_word_new = str_detect(track_name, check_word)) %>%
    mutate(album_name = gsub("DAMN", "D**N", album_name)) %>%
    mutate(album_name = gsub("Pimp", "P**p", album_name))
  
  
  
  
  
  return(artist_data)
}

# Vector of artists
artists <- c("Taylor Swift", "Beyonce", "Dua Lipa", "Olivia Rodrigo", 
             "Billie Eilish", "Ariana Grande", "Kendrick Lamar", 
             "Drake", "Ed Sheeran", "Bruno Mars", "Justin Bieber", 
             "Michael Jackson","U2","Jhene Aiko", "Tool","Travis Scott", "Meek Mill")

# Use map_df to apply get_artist_data to each artist and row-bind results
all_artists_df <- map_df(artists, get_artist_data)

```




## each artist data frame
```{r}

# Use map_df to apply get_artist_data to each artist and row-bind results
all_artists_data <- map(artists, get_artist_data)


# Select the specific columns you want
# selected_columns <- c("artist_name", "album_release_date", "album_release_year", "album_name", "danceability", "energy", "key", "loudness", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms", "explicit", "track_name", "track_number", "key", "key_mode")





# Apply select to each data frame in the list
# all_artists_data <- map(all_artists_data, ~select(.x, all_of(selected_columns)))




# Split the data frames and store each one in the environment
# Assign names to the list elements
names(all_artists_data) <- artists %>% 
  str_to_lower() %>% 
  str_replace(" ","_") %>% 
  paste0("_df")

# Now you can split the data frames and store each one in the environment
list2env(all_artists_data, envir = .GlobalEnv)
```


```{r}
usethis::use_data(
 all_artists_df,                 ariana_grande_df,             
 beyonce_df,                     billie_eilish_df,              
 bruno_mars_df,                  drake_df,                      
 dua_lipa_df,                    ed_sheeran_df,                 
 important_variables_artists_df, jhene_aiko_df,                 
justin_bieber_df,               kendrick_lamar_df,             
meek_mill_df,                   michael_jackson_df,            
olivia_rodrigo_df,taylor_swift_df,               
tool_df,travis_scott_df,               
u2_df, 
                  
                  overwrite = TRUE)
```
